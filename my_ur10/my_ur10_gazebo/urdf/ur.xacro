<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="$(arg robot_model)_robot">
  <!--   $(arg robot_model) <arg name="robot_model" value="ur10" />
    This is a top-level xacro instantiating the Gazebo-specific version of the
    'ur_robot' macro (ie: 'ur_robot_gazebo') and passing it values for all its
    required arguments.

    This file should be considered the Gazebo-specific variant of the file
    with the same name in the ur_description package. It accepts the same
    arguments, but instead of configuring everything for a real robot, will
    generate a Gazebo-compatible URDF with a ros_control hardware_interface
    attached to it.

    Only use this top-level xacro if you plan on spawning the robot in Gazebo
    'by itself', without any gripper or any other geometry attached.

    If you need to attach an end-effector, camera or need to integrate the
    robot into a larger workcell and want to spawn that as a single entity in
    Gazebo, DO NOT EDIT THIS FILE.

    Instead: create a new top-level xacro, give it a proper name, include the
    required '.xacro' files, instantiate the models (ie: call the macros) and
    connect everything by adding the appropriate joints.
  -->

  <!--
    Import main macro.

    NOTE: this imports the Gazebo-wrapper main macro, NOT the regular
          xacro macro (which is hosted by ur_description).
  -->
  <xacro:include filename="$(find my_ur10_gazebo)/urdf/ur_macro.xacro"/>
  
  <!--继承robotiq_arg2f_85宏-->
  <!-- <xacro:include filename="$(find robotiq_2f_85_gripper_gazebo)/urdf/robotiq_arg2f_85_macro.xacro"/> -->
  <!--定义fixed关节，将robotiq_arg2f_base_link连接到机械臂末端的tool0-->
  <!-- <joint name="ur_robotiq_joint" type="fixed">
    <parent link="tool0"/>
    <child link="robotiq_arg2f_base_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint> -->
  <!--调用robotiq_arg2f_85，加入夹爪的link和joint-->
  <!-- <xacro:robotiq_arg2f_85_gazebo 
    prefix=""
    transmission_hw_interface="$(arg transmission_hw_interface)"
  /> -->
  
  <!-- camera -->
  <!-- <xacro:include filename="$(find my_ur10_description)/urdf/sensors/camera.urdf.xacro"/> -->

  <!--Declare arguments -->
  <xacro:arg name="joint_limit_params" default=""/>
  <xacro:arg name="physical_params" default=""/>
  <xacro:arg name="kinematics_params" default=""/>
  <xacro:arg name="visual_params" default=""/>
  <!--
    legal values:
      - hardware_interface/PositionJointInterface
      - hardware_interface/VelocityJointInterface
      - hardware_interface/EffortJointInterface

    NOTE: this value must correspond to the controller configured in the
          controller .yaml files in the 'config' directory.
  -->
  <xacro:arg name="transmission_hw_interface" default="hardware_interface/EffortJointInterface"/>
  <xacro:arg name="safety_limits" default="false"/>
  <xacro:arg name="safety_pos_margin" default="0.15"/>
  <xacro:arg name="safety_k_position" default="20"/>

  <!-- Instantiate the Gazebo robot and pass it all the required arguments. -->
  <xacro:ur_robot_gazebo
    prefix=""
    joint_limits_parameters_file="$(arg joint_limit_params)"
    kinematics_parameters_file="$(arg kinematics_params)"
    physical_parameters_file="$(arg physical_params)"
    visual_parameters_file="$(arg visual_params)"
    transmission_hw_interface="$(arg transmission_hw_interface)"
    safety_limits="$(arg safety_limits)"
    safety_pos_margin="$(arg safety_pos_margin)"
    safety_k_position="$(arg safety_k_position)"
  />

  <!--
    Attach the Gazebo model to Gazebo's world frame.

    Note: if you're looking to integrate a UR into a larger scene and need
    to add EEFs or other parts, DO NOT change this file or the 'world' link
    here. Create a NEW xacro instead and decide whether you need to add
    a 'world' link there.
  -->
  <link name="world"/>
  <joint name="world_joint" type="fixed">
    <parent link="world"/>
    <child link="base_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <!-- <origin xyz="0 0 2" rpy="-1.57 3.14 0"/> -->
  </joint>

  <!-- <link name="base"/> -->

    <!-- ROS-Industrial 'flange' frame: attachment point for EEF models -->
  <link name="tool0_controller"/>
  <joint name="tool_controller_fake_joint" type="fixed">
    <parent link="tool0"/>
    <child link="tool0_controller"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

      <!-- gripper fix -->
    <!-- <gazebo>
      <plugin name="gazebo_grasp_fix" filename="libgazebo_grasp_fix.so">
          <arm>
            <arm_name>my_10</arm_name>
            <palm_link>wrist_3_link</palm_link>
            <gripper_link>left_inner_finger</gripper_link>
            <gripper_link>right_inner_finger </gripper_link>
          </arm>
          <forces_angle_tolerance>100</forces_angle_tolerance>
          <update_rate>120</update_rate>
          <grip_count_threshold>4</grip_count_threshold>
          <max_grip_count>8</max_grip_count>
          <release_tolerance>0.01</release_tolerance>
          <disable_collisions_on_attach>false</disable_collisions_on_attach>
          <contact_topic>__default_topic__</contact_topic>
        </plugin>
      </gazebo> -->
</robot>
